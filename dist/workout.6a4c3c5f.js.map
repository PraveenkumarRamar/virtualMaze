{"version":3,"sources":["script.js","workout.js"],"names":["Table","_createClass","data","arguments","length","undefined","fetching_data","_classCallCheck","formContainer","key","value","thead","document","createElement","tr","style","textAlign","forEach","index","th","innerText","label","append","_this","tbody","setAttribute","concat","item","td","keyId","buttonsCell","appendChild","getActionButton","action","actions","id","_this2","buttonContainer","display","justifyContent","button","margin","addEventListener","editData","deleteData","saveData","table","headingTable","getHeader","dataTable","getData","appBody","getElementById","innerHTML","addDataButton","console","log","querySelectorAll","fContainer","formData","form","querySelector","_step","_iterator","_createForOfIteratorHelper","s","n","done","inputs","err","e","f","confirm","splice","tableStructure","input_data","table_data","input","closeForm","div","title","prompt","description","alert","push","_this3","addBtn","addData","deploy","reason","date","_default","exports","default","_script","_interopRequireDefault","require","obj","__esModule","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","t","_toPrimitive","r","toPrimitive","call","String","Number","Screen1_button","tables","makeTable","Screen2_button","tables2","body","Screen1","table1","Screen2","table2"],"mappings":"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","file":"workout.6a4c3c5f.js","sourceRoot":"..","sourcesContent":["\r\n// let screen1 = document.createElement(\"button\");\r\n// screen1.innerText = \"Screen1\"\r\n// screen1.addEventListener(\"click\", () => {\r\n//     test.tableStructure();\r\n// })\r\n\r\n// let screen2 = document.createElement(\"button\");\r\n// screen2.innerText = \"Screen2\"\r\n// screen2.addEventListener(\"click\", () => {\r\n//     deploy.tableStructure();\r\n// })\r\n\r\n\r\n// document.body.append(screen1, screen2);\r\n\r\nclass Table {\r\n    constructor(\r\n        data = [],\r\n        fetching_data = []) {\r\n\r\n        this.data = data;\r\n        this.fetching_data = fetching_data\r\n        this.formContainer = null\r\n    }\r\n\r\n    getHeader() {\r\n        let thead = document.createElement(\"thead\")\r\n        let tr = document.createElement(\"tr\")\r\n        tr.style.textAlign = \"center\"\r\n\r\n\r\n        this.data.forEach((data, index) => {\r\n            let th = document.createElement(\"th\");\r\n            th.innerText = data.label ? data.label : \"-\";\r\n            tr.append(th)\r\n        })\r\n        // Object.keys(this.fetching_data[index]).forEach((key)=>{\r\n        //     console.log(key);\r\n        // })\r\n        // this.data.map((datas, index) => {\r\n        //     // if (data.label === undefined) {\r\n        //     //     // d\r\n        //     //     return data.label = \"-\";\r\n        //     // }\r\n        //     console.log(this.data[index]);\r\n        //     // if(this.data[index].keyId == Object.keys(this.fetching_data[index])){\r\n        //     //     console.log(this.data[index].keyId);\r\n        //     // }\r\n\r\n\r\n\r\n        //     // let th = document.createElement(\"th\");\r\n        //     // th.setAttribute(\"id\", `headerId${index}`)\r\n        //     // th.innerHTML = data.label\r\n        // })\r\n\r\n        thead.append(tr)\r\n        // console.log(thead);\r\n        return thead\r\n    }\r\n\r\n\r\n    // getActionButton(actions,id) {\r\n    //     let button_data = document.createElement(\"td\");\r\n    //     button_data.style.textAlign = \"center\";\r\n\r\n    //     actions.forEach((action,index) => {\r\n    //         let button = document.createElement(\"button\");\r\n    //         button.style.margin = \"10px\";\r\n    //         button.setAttribute(\"id\",id)\r\n    //         button.innerText = action;\r\n    //         // button.addEventListener(\"click\", () => {\r\n    //         //     deploy.`${action}Data`(id)})\r\n    //         button_data.appendChild(button);\r\n    //     });\r\n\r\n    //     return button_data;\r\n    // }\r\n    // getData() {\r\n    //     let tbody = document.createElement('tbody');\r\n\r\n    //     this.fetching_data.forEach((data,index) => {\r\n    //         let tr = document.createElement(\"tr\");\r\n    //         tr.setAttribute(\"id\", `row${index}`);\r\n\r\n    //         this.data.forEach((item) => {\r\n    //             let td = document.createElement(\"td\");\r\n    //             td.style.textAlign = \"center\";\r\n    //             td.setAttribute(\"class\", `data${index}`)\r\n\r\n    //             td.innerText = data[item.keyId] !== undefined ? data[item.keyId] : \"-\";\r\n    //             // data[item.keyId] == \"action\" ? return : \"-\";\r\n\r\n    //             tr.append(td)\r\n\r\n    //         });\r\n\r\n    //         if (Array.isArray(data.action)) {\r\n    //             let buttons = this.getActionButton(data.action,index);\r\n    //             tr.appendChild(buttons);\r\n    //         }\r\n    //         else {\r\n    //             let emptyCell = document.createElement(\"td\");\r\n    //             tr.appendChild(emptyCell);\r\n    //         }\r\n    //         console.log(tr);\r\n    //         tbody.appendChild(tr);\r\n    //     });\r\n\r\n    //     return tbody;\r\n    // }\r\n\r\n\r\n    getData() {\r\n        let tbody = document.createElement('tbody');\r\n\r\n        this.fetching_data.forEach((data, index) => {\r\n            let tr = document.createElement(\"tr\");\r\n            tr.setAttribute(\"id\", `row${index}`);\r\n\r\n            this.data.forEach((item) => {\r\n                let td = document.createElement(\"td\");\r\n                td.style.textAlign = \"center\";\r\n                td.setAttribute(\"class\", `data${index}`);\r\n\r\n                if (item.keyId !== \"action\") {\r\n                    td.innerText = data[item.keyId] !== undefined ? data[item.keyId] : \"-\";\r\n                    tr.append(td);\r\n                } else {\r\n                    let buttonsCell = document.createElement(\"td\");\r\n                    buttonsCell.appendChild(this.getActionButton(item.action, index)); // Pass data.id as row ID\r\n                    tr.appendChild(buttonsCell);\r\n                }\r\n            });\r\n\r\n            tbody.appendChild(tr);\r\n        });\r\n\r\n        return tbody;\r\n    }\r\n\r\n    getActionButton(actions, id) {\r\n        let buttonContainer = document.createElement(\"div\"); // Create a container for buttons\r\n        buttonContainer.style.display = \"flex\"; // Align buttons horizontally\r\n        buttonContainer.style.justifyContent = \"center\"\r\n\r\n        actions.forEach((action) => {\r\n            let button = document.createElement(\"button\");\r\n            button.style.margin = \"5px\";\r\n            button.setAttribute(\"id\", `${action}_${id}`); // Unique ID for each button based on row ID\r\n            button.innerText = action;\r\n\r\n            // Add event listener based on action type\r\n            switch (action) {\r\n                case \"Edit\":\r\n                    button.addEventListener(\"click\", () => this.editData(id));\r\n                    break;\r\n                case \"Delete\":\r\n                    button.addEventListener(\"click\", () => this.deleteData(id));\r\n                    break;\r\n                case \"Save\":\r\n                    button.style.display = \"none\"; // Hide the Save button initially\r\n                    button.addEventListener(\"click\", () => this.saveData(id));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            buttonContainer.appendChild(button);\r\n        });\r\n\r\n        return buttonContainer;\r\n    }\r\n\r\n    tableStructure() {\r\n        let table = document.createElement(\"table\");\r\n        let headingTable = this.getHeader();\r\n        let dataTable = this.getData();\r\n        table.append(headingTable, dataTable);\r\n\r\n        // console.log(table);\r\n        let appBody = document.getElementById(\"app\");\r\n        appBody.innerHTML = ''; // Clear previous content\r\n        appBody.append(table, this.addDataButton()); // Append the table\r\n        console.log(table);\r\n    }\r\n\r\n    editData(id) {\r\n        // console.log(`Data edited successfully in  ${id}`);\r\n        let data = document.querySelectorAll(`.data${id}`)\r\n\r\n        let fContainer = this.formContainer || this.formData()\r\n        let form = fContainer.querySelector('.form-container')\r\n        // console.log(form);\r\n        form.innerHTML = ''\r\n        fContainer.style.display = \"block\";\r\n        this.formContainer = fContainer\r\n\r\n\r\n        let editBtn = document.querySelector(`#Edit_${id}`)\r\n        editBtn.style.display = \"none\"\r\n\r\n        // console.log(editBtn);\r\n\r\n        let saveBtn = document.querySelector(`#Save_${id}`)\r\n        saveBtn.style.display = \"inline\"\r\n\r\n\r\n        for (let datas of data) {\r\n            // console.log(typeof datas.innerHTML);\r\n            let inputs = datas.innerHTML\r\n            form.innerHTML += `<input type='text' id='text_data${id}' value='${inputs}'/><br><br>`;\r\n            // inputs.setAttribute(\"type\" , \"text\")\r\n        }\r\n        let ele = document.getElementById(\"app\")\r\n        ele.append(fContainer)\r\n        // document.body.appendChild(fContainer)\r\n    }\r\n\r\n    deleteData(id) {\r\n        console.log(id);\r\n        if (confirm(\"Are you sure you want to delete this item?\")) {\r\n            this.fetching_data.splice(id, 1);\r\n            this.tableStructure();\r\n        }\r\n    }\r\n\r\n    saveData(id) {\r\n        let input_data = document.querySelectorAll(`#text_data${id}`);\r\n        let table_data = document.querySelectorAll(`.data${id}`);\r\n\r\n        // Assuming input_data and table_data have the same length\r\n        input_data.forEach((input, index) => {\r\n            table_data[index].innerHTML = input.value;\r\n        });\r\n        this.closeForm(id)\r\n    }\r\n\r\n\r\n    formData() {\r\n        let div = document.createElement(\"div\")\r\n        div.setAttribute(\"class\", \"forms-section\")\r\n\r\n        let form = document.createElement(\"form\")\r\n        form.setAttribute(\"class\", \"form-container\")\r\n        div.append(form)\r\n        return div\r\n    }\r\n\r\n    addData() {\r\n        // let data =  document.querySelectorAll(\".data0\")\r\n        // // for(let d of data){\r\n        // //     i++\r\n        // //     console.log(d.innerHTML);\r\n        // // }\r\n\r\n\r\n        const title = prompt(\"Enter title:\");\r\n        const description = prompt(\"Enter description:\");\r\n        if ((title.length || description.length) < 0) {\r\n            alert('Fields cannot be empty')\r\n            return\r\n        } else {\r\n            this.fetching_data.push({ title: title, description: description });\r\n        }\r\n        this.tableStructure();\r\n\r\n        // console.log(data);\r\n        // // return data\r\n    }\r\n    addDataButton() {\r\n        let addBtn = document.createElement(\"button\")\r\n        addBtn.innerHTML = \"Add\";\r\n        addBtn.style.textAlign = \"center\"\r\n        addBtn.addEventListener(\"click\", () => this.addData())\r\n        return addBtn\r\n    }\r\n\r\n    closeForm(id) {\r\n\r\n        let editBtn = document.querySelector(`#Edit_${id}`)\r\n        editBtn.style.display = \"inline\"\r\n\r\n        // console.log(editBtn);\r\n\r\n        let saveBtn = document.querySelector(`#Save_${id}`)\r\n        saveBtn.style.display = \"none\"\r\n\r\n        // let form = document.querySelector(\".forms-section\")\r\n        this.formContainer.style.display = \"none\";\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nlet deploy = new Table([\r\n    {\r\n        keyId: \"title\",\r\n        label: \"Title\",\r\n        // formate() {\r\n\r\n        // }\r\n    },\r\n    {\r\n        keyId: \"description\",\r\n        label: \"Description\",\r\n        // formate() {\r\n\r\n        // }\r\n    }\r\n    , {\r\n        keyId: \"reason\",\r\n        label: \"Reason\",\r\n        // action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n        // formate() {\r\n\r\n        // }\r\n    }, {\r\n        keyId: \"date\",\r\n        label: \"Date\",\r\n        // action: [\"Edit\", \"Delete\", \"Save\"]\r\n        // formate() {\r\n\r\n        // }\r\n    },\r\n    {\r\n        keyId: \"action\",\r\n        label: \"Action\",\r\n        action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n        // formate() {\r\n\r\n        // }\r\n\r\n    }\r\n],\r\n[\r\n    {\r\n        id: \"1\",\r\n        title: \"title 1\",\r\n        description: \"Direct\",\r\n        reason: \"nothing\",\r\n        date: 122001\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"title 2\",\r\n        description: \"Legacy\",\r\n        reason: \"no reason\",\r\n        date: 123002\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"title 3\",\r\n        description: \"Direct\",\r\n        reason: \"only reason\",\r\n        date: 125001\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"title 3\",\r\n        description: \"Direct\",\r\n        reason: \"yes yes\",\r\n        date: 112001\r\n    }\r\n\r\n])\r\n\r\n// deploy.getData()\r\n// deploy.tableStructure();\r\n\r\n\r\n// class Table2 extends Table {\r\n//     constructor(data = [], fetching_data = []) {\r\n//         super(data, fetching_data)\r\n//     }\r\n// }\r\n\r\n\r\n// let test = new Table([\r\n//     {\r\n//         keyId: \"title\",\r\n//         label: \"Title\",\r\n//         // formate() {\r\n\r\n//         // }\r\n//     },\r\n//     {\r\n//         keyId: \"description\",\r\n//         label: \"Description\",\r\n//         // formate() {\r\n\r\n//         // }\r\n//     },\r\n//     {\r\n//         keyId: \"action\",\r\n//         label: \"Action\",\r\n//         action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n//         // formate() {\r\n\r\n//         // }\r\n//     }\r\n// ], [\r\n//     {\r\n//         id: \"1\",\r\n//         title: \"title 1\",\r\n//         description: \"Direct-message\",\r\n//     },\r\n//     {\r\n//         id: \"2\",\r\n//         title: \"title 2\",\r\n//         description: \"Legacy\",\r\n//     },\r\n//     {\r\n//         id: \"3\",\r\n//         title: \"title 3\",\r\n//         description: \"Direct-message\",\r\n//     }\r\n// ])\r\nexport default Table","import Table from \"./script\";\r\n\r\n\r\nlet Screen1_button = document.createElement(\"button\")\r\nScreen1_button.setAttribute('id','screen1')\r\nScreen1_button.innerText = \"Screen1\"\r\nScreen1_button.addEventListener(\"click\",()=>{\r\n    tables.makeTable()\r\n})\r\n\r\n\r\nlet Screen2_button = document.createElement(\"button\")\r\nScreen2_button.setAttribute('id','screen2')\r\nScreen2_button.innerText = \"Screen2\"\r\nScreen2_button.addEventListener(\"click\",()=>{\r\n    tables2.makeTable()\r\n\r\n})\r\n\r\n\r\ndocument.body.append(Screen1_button,Screen2_button)\r\n\r\n\r\n\r\nclass Screen1{\r\n    constructor(data,fetching_data){\r\n        this.table1 = new Table(data,fetching_data);\r\n    }\r\n    makeTable(){\r\n        this.table1.tableStructure()\r\n        // console.log(\"make table is working\");\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Screen2{\r\n    constructor(data,fetching_data){\r\n        this.table2 = new Table(data,fetching_data);\r\n    }\r\n    makeTable(){\r\n        this.table2.tableStructure()\r\n        // console.log(\"make table is working\");\r\n    }\r\n}\r\n\r\n\r\n\r\nlet tables = new Screen1([\r\n    {\r\n        keyId: \"title\",\r\n        label: \"Title\"\r\n    },\r\n    {\r\n        keyId: \"description\",\r\n        label: \"Description\",\r\n    },\r\n    {\r\n        keyId: \"action\",\r\n        label: \"Action\",\r\n        action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n    }\r\n], [\r\n    {\r\n        id: \"1\",\r\n        title: \"title 1\",\r\n        description: \"Direct-message\",\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"title 2\",\r\n        description: \"Legacy\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"title 3\",\r\n        description: \"Direct-message\",\r\n    }\r\n])\r\n\r\n\r\n\r\nlet tables2 = new Screen2([\r\n    {\r\n        keyId: \"title\",\r\n        label: \"Title\",\r\n        // formate() {\r\n\r\n        // }\r\n    },\r\n    {\r\n        keyId: \"description\",\r\n        label: \"Description\",\r\n        // formate() {\r\n\r\n        // }\r\n    }\r\n    , {\r\n        keyId: \"reason\",\r\n        label: \"Reason\",\r\n        // action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n        // formate() {\r\n\r\n        // }\r\n    }, {\r\n        keyId: \"date\",\r\n        label: \"Date\",\r\n        // action: [\"Edit\", \"Delete\", \"Save\"]\r\n        // formate() {\r\n\r\n        // }\r\n    },\r\n    {\r\n        keyId: \"action\",\r\n        label: \"Action\",\r\n        action: [\"Edit\", \"Delete\", \"Save\"]\r\n\r\n        // formate() {\r\n\r\n        // }\r\n\r\n    }\r\n],\r\n[\r\n    {\r\n        id: \"1\",\r\n        title: \"title 1\",\r\n        description: \"Direct\",\r\n        reason: \"nothing\",\r\n        date: 122001\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"title 2\",\r\n        description: \"Legacy\",\r\n        reason: \"no reason\",\r\n        date: 123002\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"title 3\",\r\n        description: \"Direct\",\r\n        reason: \"only reason\",\r\n        date: 125001\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"title 3\",\r\n        description: \"Direct\",\r\n        reason: \"yes yes\",\r\n        date: 112001\r\n    }\r\n\r\n])\r\n\r\n\r\n// })\r\n\r\n\r\n// document.body.append(screen1);\r\n"]}